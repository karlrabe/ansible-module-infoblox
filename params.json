{
  "name": "ansible-module-infoblox",
  "tagline": "Awesome infobox module for ansible",
  "body": "# ansible-module-infoblox\r\nThis module permits you interact with infoblox grid and perform most usual task.\r\n\r\n## Dependencies\r\n\r\n- Python \"requests\" module is required\r\n```\r\nsudo pip install requests\r\n```\r\n\r\n## Extensible Attributes\r\n\r\nExtensible attributes are supported in this client.  It should be noted that in WAPI versions before 1.2,  the field is named \"extensible_attributes\", whereas in version 1.2 and later, it is named \"extattrs\". \r\n\r\n## Infoblox Version Compatibility\r\n\r\nThis gem is known to be compatible with Infoblox versions 1.0 through 2.3.  While Infoblox claims that their API is backwards-compatible, one caveat remains with the Extensible Attributes (see elsewhere in this document).  Some features are only available in newer versions (such as FixedAddress and AAAARecord).\r\n\r\n## Usage\r\n### Actions\r\n- get_network [network]\r\n- get_next_available_ip [network] \r\n- get_host [hostname]\r\n- add_host [hostname, network]\r\n- delete_host [hostname]\r\n- set_extattr [hostname, attirbule name, attribute value]\r\n\r\n### Playbooke example\r\n```\r\n- hosts: localhost\r\n     connection: local\r\n        gather_facts: False\r\n   tasks:\r\n   - name: Add host\r\n     infoblox:\r\n       server=192.168.1.1\r\n       username=admin\r\n       password=admin\r\n       action=add_host\r\n       network=192.168.1.0/24\r\n       host={{ item }}\r\n     with_items:\r\n       - test01.local\r\n       - test02.local\r\n     register: infoblox\r\n   - name: Do awesome stuff with the result\r\n     debug: msg=\"Get crazy!!\"\r\n```\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}